{
  "position": {
    "line": 6,
    "character": 63
  },
  "source": "expression_context/source/anon_func_expr_ctx_source9.bal",
  "items": [
    {
      "label": "TEST_INT_CONST1",
      "kind": "Variable",
      "detail": "int",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": ""
        }
      },
      "sortText": "130",
      "insertText": "TEST_INT_CONST1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TEST_STRING_CONST1",
      "kind": "Variable",
      "detail": "string",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": ""
        }
      },
      "sortText": "130",
      "insertText": "TEST_STRING_CONST1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "AnnotationType",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "180",
      "insertText": "AnnotationType",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Client",
      "kind": "Interface",
      "detail": "Object",
      "documentation": {
        "left": "The HTTP client provides the capability for initiating contact with a remote HTTP service. The API it\nprovides includes functions for the standard HTTP methods, forwarding a received request and sending requests\nusing custom HTTP verbs."
      },
      "sortText": "190",
      "insertText": "Client",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Response",
      "kind": "Interface",
      "detail": "Object",
      "documentation": {
        "left": "Represents a response.\n"
      },
      "sortText": "190",
      "insertText": "Response",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ResponseMessage",
      "kind": "Enum",
      "detail": "Union",
      "documentation": {
        "left": "The types of messages that are accepted by HTTP `listener` when sending out the outbound response."
      },
      "sortText": "160",
      "insertText": "ResponseMessage",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "RequestMessage",
      "kind": "Enum",
      "detail": "Union",
      "documentation": {
        "left": "The types of messages that are accepted by HTTP `client` when sending out the outbound request."
      },
      "sortText": "160",
      "insertText": "RequestMessage",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Listener",
      "kind": "Interface",
      "detail": "Object",
      "sortText": "190",
      "insertText": "Listener",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TestRecord1",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "180",
      "insertText": "TestRecord1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TestRecord2",
      "kind": "Struct",
      "detail": "Record",
      "sortText": "180",
      "insertText": "TestRecord2",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TestMap2",
      "kind": "Unit",
      "detail": "Map",
      "sortText": "230",
      "insertText": "TestMap2",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TestMap3",
      "kind": "Unit",
      "detail": "Map",
      "sortText": "230",
      "insertText": "TestMap3",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "TestObject1",
      "kind": "Interface",
      "detail": "Object",
      "sortText": "190",
      "insertText": "TestObject1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function1()",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ls_org1/module1:0.1.0_  \n  \n  \n"
        }
      },
      "sortText": "120",
      "insertText": "function1();",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function2()",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ls_org1/module1:0.1.0_  \n  \nThis is function2  \n"
        }
      },
      "sortText": "120",
      "insertText": "function2();",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function3(int param1, int param2)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ls_org1/module1:0.1.0_  \n  \nThis is function3 with input parameters\n  \n**Params**  \n- `int` param1: param1 Parameter Description   \n- `int` param2: param2 Parameter Description"
        }
      },
      "sortText": "120",
      "insertText": "function3(${1});",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    },
    {
      "label": "function4(int param1, int param2)",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ls_org1/module1:0.1.0_  \n  \nThis is function3 with input parameters\n  \n**Params**  \n- `int` param1: param1 Parameter Description   \n- `int` param2: param2 Parameter Description"
        }
      },
      "sortText": "120",
      "insertText": "function4(${1});",
      "insertTextFormat": "Snippet",
      "command": {
        "title": "editor.action.triggerParameterHints",
        "command": "editor.action.triggerParameterHints"
      }
    }
  ]
}
